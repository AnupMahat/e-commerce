{"ast":null,"code":"import { cartActonTypes } from './cart.types';\nimport { addItemTocart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActonTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActonTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemTocart(state.cartItems, action.payload)\n      };\n\n    case cartActonTypes.CLEAR_ITEM_FROM_CARTE:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.item.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/redux/cart/cart.reducer.jsx"],"names":["cartActonTypes","addItemTocart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CARTE","filter","cartItem","id","item"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,SAAOC,aAAP,QAA2B,cAA3B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAC;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,cAAc,CAACS,kBAApB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIA,SAAKH,cAAc,CAACU,QAApB;AACE,aAAM,EACJ,GAAGJ,KADC;AAEJF,QAAAA,SAAS,EAACH,aAAa,CAACK,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFnB,OAAN;;AAIA,SAAKX,cAAc,CAACY,qBAApB;AACE,aAAM,EACJ,GAAGN,KADC;AAEJF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,QAAQ,IAAEA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeK,IAAf,CAAoBD,EAArE;AAFP,OAAN;;AAIN;AACE,aAAOT,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import { cartActonTypes } from './cart.types'\nimport{addItemTocart} from './cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems:[]\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActonTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      }\n      case cartActonTypes.ADD_ITEM:\n        return{\n          ...state,\n          cartItems:addItemTocart(state.cartItems,action.payload)\n        }  \n        case cartActonTypes.CLEAR_ITEM_FROM_CARTE:\n          return{\n            ...state,\n            cartItems: state.cartItems.filter(cartItem=>cartItem.id !== action.payload.item.id)\n          }    \n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}