{"ast":null,"code":"var _jsxFileName = \"/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-in.styles.scss';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/users.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredintial, setCredential] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredintial;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCredential({ ...userCredintial,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"I Already Have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    label: \"email\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"password\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \" \", \"Sign in with Google\", \" \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredintial","setCredential","email","password","handleSubmit","e","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport './sign-in.styles.scss'\n\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/users.actions'\n\nconst SignIn =({emailSignInStart,googleSignInStart})=>{\n    \n    const [userCredintial,setCredential] = useState({email:'',password:''})\n    const {email,password} = userCredintial\n    const handleSubmit=async (e)=>{\n        e.preventDefault()\n        \n       \n        emailSignInStart(email,password)\n    }\n    const handleChange=(e)=>{\n        const{value,name} = e.target\n        setCredential({...userCredintial,[name]:value})\n    }\n\n\n        return(\n            <div className='sign-in'>\n                <h2>I Already Have an Account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={handleSubmit}>\n                    <FormInput \n                    name ='email' \n                    type='email' \n                    value={email} \n                    label='email'\n                    handleChange={handleChange}\n                    required\n                    />\n                    <FormInput \n                    type='password' \n                    name ='password' \n                    value={password} \n                    label='password'\n                    handleChange={handleChange}\n                    required\n                    />\n                    <div className='buttons'>\n                    <CustomButton type='submit'>Sign in</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                        {\" \"}\n                        Sign in with Google\n                        {\" \"}\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    \n}\nconst mapDispatchToProps = dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}