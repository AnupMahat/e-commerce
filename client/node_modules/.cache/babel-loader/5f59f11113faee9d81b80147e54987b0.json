{"ast":null,"code":"import { shopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(shapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(shapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","payload","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","shapshot","catch","error","message"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,YAAD,KAAmB;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADoC;AAE1DH,EAAAA,OAAO,EAAEE;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMR,cAAc,GAAGT,8BAA8B,CAACiB,QAAD,CAArD;AAEAL,MAAAA,QAAQ,CAACJ,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KANH,EAOGS,KAPH,CAOUC,KAAD,IAAWP,QAAQ,CAACR,uBAAuB,CAACe,KAAK,CAACC,OAAP,CAAxB,CAP5B;AAQD,GAZD;AAaD,CAdM","sourcesContent":["import { shopActionTypes } from './shop.types'\n\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n    dispatch(fetchCollectionsStart())\n\n    collectionRef\n      .get()\n      .then((shapshot) => {\n        const collectionsMap = convertCollectionSnapshotToMap(shapshot)\n\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}