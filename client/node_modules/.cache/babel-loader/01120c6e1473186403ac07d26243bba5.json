{"ast":null,"code":"var _jsxFileName = \"/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/pages/shop/shop.comopnent.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.comopnent';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async shapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(shapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:CollectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/pages/shop/shop.comopnent.jsx"],"names":["React","Component","Route","CollectionPage","connect","CollectionsOverview","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","shapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AAEA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAKA,MAAOC,QAAP,SAAwBT,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BU,KAD6B,GACrB;AACJC,MAAAA,OAAO,EAAC;AADJ,KADqB;AAAA,SAI7BC,uBAJ6B,GAIH,IAJG;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACN,MAAAA;AAAD,QAAsB,KAAKO,KAAjC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACtC,YAAMC,cAAc,GAAGb,8BAA8B,CAACY,QAAD,CAArD;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEQ,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,SAAS,EAAEnB,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAErB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAxB4B;;AA2BjC,MAAMsB,kBAAkB,GAAEC,QAAD,KAAa;AAClClB,EAAAA,iBAAiB,EAACY,cAAc,IAAEM,QAAQ,CAAClB,iBAAiB,CAACY,cAAD,CAAlB;AADR,CAAb,CAAzB;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../collection/collection.comopnent'\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview'\n\nimport {firestore,convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\n\n\nclass  ShopPage extends Component{\n    state = {\n        loading:true\n    }\n    unsubscribeFromSnapshot = null\n    \n    componentDidMount(){\n        const {updateCollections} = this.props\n        const collectionRef = firestore.collection('collections')\n        collectionRef.onSnapshot(async shapshot =>{\n            const collectionsMap = convertCollectionSnapshotToMap(shapshot)\n            updateCollections(collectionsMap)\n            this.setState({loading:false})\n        } )\n    }\n\n    render(){\n        const {match} = this.props\n        return(\n            <div className='shop-page'>\n                <Route exact path = {`${match.path}`} component={CollectionsOverview}/>\n                <Route path={`${match.path}/:CollectionId`} component={CollectionPage}/>\n            </div>\n)\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>({\n    updateCollections:collectionsMap=>dispatch(updateCollections(collectionsMap))\n})\n    \n\nexport default connect(null,mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}