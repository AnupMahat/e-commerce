{"ast":null,"code":"var _jsxFileName = \"/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-in.styles.scss';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/users.actions';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"I Already Have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      label: \"email\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      label: \"password\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \" \", \"Sign in with Google\", \" \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  googleSignInStart: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport './sign-in.styles.scss'\n\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/users.actions'\n\nclass SignIn extends Component{\n    constructor(props){ \n        super(props)\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n    handleSubmit=async (e)=>{\n        e.preventDefault()\n        const {email,password} = this.state\n       \n        \n    }\n    handleChange=(e)=>{\n        const{value,name} = e.target\n        this.setState({[name]:value})\n    }\n\n    render(){\n        const{googleSignInStart}=this.props\n        const {email,password} = this.state\n        return(\n            <div className='sign-in'>\n                <h2>I Already Have an Account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                    name ='email' \n                    type='email' \n                    value={email} \n                    label='email'\n                    handleChange={this.handleChange}\n                    required\n                    />\n                    <FormInput \n                    type='password' \n                    name ='password' \n                    value={password} \n                    label='password'\n                    handleChange={this.handleChange}\n                    required\n                    />\n                    <div className='buttons'>\n                    <CustomButton type='submit'>Sign in</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                        {\" \"}\n                        Sign in with Google\n                        {\" \"}\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    googleSignInStart:()=>dispatch(emailSignInStart())\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}