{"ast":null,"code":"import cartItem from '../../components/cart-item/cart-item.component';\nexport const addItemTocart = (cartItems, cartItemToAdd) => {\n  //check if added cart item exist in cart and return true or false\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); //if true map each cart item and compare existing item and add quantity\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["cartItem","addItemTocart","cartItems","cartItemToAdd","existingCartItem","find","id","map","quantity","removeItemFromFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gDAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBL,QAAD,IAAcA,QAAQ,CAACM,EAAT,KAAgBH,aAAa,CAACG,EADrB,CAAzB,CAFyD,CAMzD;;AACA,MAAIF,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACK,GAAV,CAAeP,QAAD,IACnBA,QAAQ,CAACM,EAAT,KAAgBH,aAAa,CAACG,EAA9B,GACI,EAAE,GAAGN,QAAL;AAAeQ,MAAAA,QAAQ,EAAER,QAAQ,CAACQ,QAAT,GAAoB;AAA7C,KADJ,GAEIR,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGE,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBK,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAhBM;AAkBP,OAAO,MAAMC,sBAAsB,GAAG,CAACP,SAAD,EAAYQ,gBAAZ,KAAiC;AACrE,QAAMN,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBL,QAAD,IAAcA,QAAQ,CAACM,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAIF,gBAAgB,CAACI,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAON,SAAS,CAACS,MAAV,CAAkBX,QAAD,IAAcA,QAAQ,CAACM,EAAT,KAAgBI,gBAAgB,CAACJ,EAAhE,CAAP;AACD;;AAED,SAAOJ,SAAS,CAACK,GAAV,CAAeP,QAAD,IACnBA,QAAQ,CAACM,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI,EAAE,GAAGN,QAAL;AAAeQ,IAAAA,QAAQ,EAAER,QAAQ,CAACQ,QAAT,GAAoB;AAA7C,GADJ,GAEIR,QAHC,CAAP;AAKD,CAdM","sourcesContent":["import cartItem from '../../components/cart-item/cart-item.component'\n\nexport const addItemTocart = (cartItems, cartItemToAdd) => {\n  //check if added cart item exist in cart and return true or false\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToAdd.id\n  )\n\n  //if true map each cart item and compare existing item and add quantity\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    )\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n\nexport const removeItemFromFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  )\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id)\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  )\n}\n"]},"metadata":{},"sourceType":"module"}