{"ast":null,"code":"var _jsxFileName = \"/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/client/src/components/sign-up/sign-up.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/users.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredential, setUserCredential] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredential;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('password does not match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredential({ ...userCredential,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Sign Up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirrm-Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"SIGNUP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/client/src/components/sign-up/sign-up.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredential","setUserCredential","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {connect} from 'react-redux'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport {signUpStart} from '../../redux/user/users.actions'\nimport './sign-up.styles.scss'\n\nconst SignUp =({signUpStart,})=>{\n    const [userCredential,setUserCredential] =useState({\n        displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''\n    })\n\n    const {displayName,email,password,confirmPassword} = userCredential\n\n    const handleSubmit= async(e)=>{\n        e.preventDefault()\n\n       \n        \n        if(password !== confirmPassword){\n            alert('password does not match')\n            return\n        }\n        signUpStart({displayName,email,password})\n    }\n\n    const handleChange=(e)=>{\n        const {value,name} = e.target\n        setUserCredential({...userCredential,[name]:value})\n\n    }\n\n\n        return(\n            <div className='sign-up'>\n                <h2 className='title'>I do not have a account</h2>\n                <span>Sign Up with your email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        handleChange={handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        handleChange={handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        handleChange={handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        handleChange={handleChange}\n                        label='Confirrm-Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGNUP</CustomButton>\n                </form>\n            </div>\n        )\n    }\n\n\nconst mapDispatchToProps=(dispatch)=>({\n    signUpStart:(userCredentials)=>dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}