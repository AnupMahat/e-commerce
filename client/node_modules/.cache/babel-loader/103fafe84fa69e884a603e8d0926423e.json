{"ast":null,"code":"var _jsxFileName = \"/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/pages/shop/shop.comopnent.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.comopnent';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectiosnPageWithspinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crown-db-cc6d1/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get()\n    // .then(shapshot =>{\n    //     const collectionsMap = convertCollectionSnapshotToMap(shapshot)\n    //     console.log(collectionsMap)\n    //     updateCollections(collectionsMap)\n    //     this.setState({loading:false})\n    // } )\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: this.state.loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:CollectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectiosnPageWithspinner, Object.assign({\n        isLoading: this.state.loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 78\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/anupmahat/Desktop/Projects/react-course/crwn-clothing/src/pages/shop/shop.comopnent.jsx"],"names":["React","Component","Route","CollectionPage","connect","CollectionsOverview","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectiosnPageWithspinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AAEA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMM,0BAA0B,GAAGF,WAAW,CAACN,cAAD,CAA9C;;AAEA,MAAOS,QAAP,SAAwBX,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BY,KAD6B,GACrB;AACJC,MAAAA,OAAO,EAAC;AADJ,KADqB;AAAA,SAI7BC,uBAJ6B,GAIH,IAJG;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACR,MAAAA;AAAD,QAAsB,KAAKS,KAAjC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,uGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,WAAW,IAAEC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFnB,EAJe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKX,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEW,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,MAAM,EAAGZ,KAAD,iBAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC;AAAtD,SAAkEG,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGZ,KAAD,iBAAS,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC;AAAlD,SAA8DG,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA/B4B;;AAkCjC,MAAMa,kBAAkB,GAAEC,QAAD,KAAa;AAClCvB,EAAAA,iBAAiB,EAACwB,cAAc,IAAED,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AADR,CAAb,CAAzB;;AAKA,eAAe5B,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiClB,QAAjC,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../collection/collection.comopnent'\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview'\n\nimport {firestore,convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectiosnPageWithspinner = WithSpinner(CollectionPage)\n\nclass  ShopPage extends Component{  \n    state = {\n        loading:true\n    }\n    unsubscribeFromSnapshot = null\n    \n    componentDidMount(){\n        const {updateCollections} = this.props\n        const collectionRef = firestore.collection('collections')\n\n        fetch('https://firestore.googleapis.com/v1/projects/crown-db-cc6d1/databases/(default)/documents/collections')\n        .then(response=> response.json())\n        .then(collections=>console.log(collections))\n\n        // collectionRef.get()\n        // .then(shapshot =>{\n        //     const collectionsMap = convertCollectionSnapshotToMap(shapshot)\n        //     console.log(collectionsMap)\n        //     updateCollections(collectionsMap)\n        //     this.setState({loading:false})\n        // } )\n    }\n\n    render(){\n        const {match} = this.props\n        return(\n            <div className='shop-page'>\n                <Route exact path = {`${match.path}`} render={(props)=><CollectionsOverviewWithSpinner isLoading={this.state.loading}{...props}/>}/>\n                <Route path={`${match.path}/:CollectionId`} render={(props)=><CollectiosnPageWithspinner isLoading={this.state.loading}{...props}/>}/>\n            </div>\n)\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>({\n    updateCollections:collectionsMap=>dispatch(updateCollections(collectionsMap))\n})\n    \n\nexport default connect(null,mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}